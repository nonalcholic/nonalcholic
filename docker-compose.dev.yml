version: "3.8"

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - "./server:/app"
    ports:
      - "${SERVER_PORT}:9999"
    environment:
      MONGO_PORT: "${MONGO_PORT}"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile # dev
      args:
        SERVER_PORT: "${SERVER_PORT}"
        CLIENT_PORT: "${CLIENT_PORT}"
    depends_on:
      - server
    networks:
      - internal
    volumes:
      - "./client:/app"
      - "/app/node_modules"
    ports:
      - "${CLIENT_PORT}:3000"
    environment:
      # NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
      HTTP_PROXY: "http://${IP_ADDRESS_DEV}:${SERVER_PORT}"
      REACT_APP_SERVER_PORT: "${SERVER_PORT}"
      REACT_APP_CLIENT_PORT: "${CLIENT_PORT}"
      REACT_APP_IP_ADDRESS: "${IP_ADDRESS_DEV}"

  mongo:
    image: mongo:4-bionic
    # image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: nonalcholic
    volumes:
      - mongo-volume:/data/db
    networks:
      - internal
    ports:
      - ${MONGO_PORT}:27017

  mongo-express:
    image: mongo-express:0.54
    depends_on:
      - mongo
    # restart: always
    restart: unless-stopped
    networks:
      - internal
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: nonalcholic
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: nonalcholic

networks:
  internal:
    driver: bridge

volumes:
  mongo-volume:
    driver: local
